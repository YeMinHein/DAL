name: NuGet Pack & Upload to Google Drive
on:
  workflow_dispatch:
  push:
    branches:
      - main  # or 'master'
    paths:
      - 'DAL/**'
      - '.github/workflows/nuget-pack.yml'

env:
  NUGET_OUTPUT: ./nupkgs
  PACKAGE_VERSION: ${{ github.run_number }}.0.0  # Using run number as version

jobs:
  build-pack-publish:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
        with:
          nuget-version: latest

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore DAL/DAL.csproj

      - name: Build the Project
        run: msbuild DAL/DAL.csproj /p:Configuration=Release

      - name: Create output directory
        run: mkdir ${{ env.NUGET_OUTPUT }}

      - name: Pack the Project
        id: nuget_pack
        run: |
          nuget pack DAL/DAL.csproj -OutputDirectory ${{ env.NUGET_OUTPUT }} -Properties Configuration=Release -Version ${{ env.PACKAGE_VERSION }}
          if ($LASTEXITCODE -eq 0) {
            Write-Output "::set-output name=status::success"
          } else {
            Write-Output "::set-output name=status::failure"
            exit 1
          }

      # Success notification
      - name: Notify Google Chat - Success
        if: steps.nuget_pack.outcome == 'success'
        run: |
          $package = Get-ChildItem ${{ env.NUGET_OUTPUT }}/*.nupkg | Select-Object -First 1
          $body = @{
            text = "✅ NuGet Package Created Successfully!
            Project: DAL
            Version: ${{ env.PACKAGE_VERSION }}
            Package: $($package.Name)
            Size: $([math]::Round($package.Length/1KB, 2)) KB
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Drive Link: https://drive.google.com/drive/u/0/folders/1Ulvq7i1JIQqmBQZiTm0NLkTnhyD6avBr"
          } | ConvertTo-Json -Depth 10
          Invoke-RestMethod -Uri "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" -Method Post -Body $body

      # Failure notification
      - name: Notify Google Chat - Failure
        if: steps.nuget_pack.outcome == 'failure'
        run: |
          $body = @{
            text = "❌ NuGet Package Creation Failed!
            Project: DAL
            Branch: ${{ github.ref_name }}
            Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Error: Package restore or build failed"
          } | ConvertTo-Json -Depth 10
          Invoke-RestMethod -Uri "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" -Method Post -Body $body

      # Upload to Google Drive
      - name: Upload to Google Drive
        if: steps.nuget_pack.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          credentials_json: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}
          path: ${{ env.NUGET_OUTPUT }}/*.nupkg
          destination: drive://1Ulvq7i1JIQqmBQZiTm0NLkTnhyD6avBr/
          overwrite: true